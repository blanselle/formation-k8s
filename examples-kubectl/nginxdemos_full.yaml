---
apiVersion: v1
kind: Namespace
metadata:
  name: nginxdemos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: nginxdemos
  name: deployment-nginxdemos
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-nginxdemos
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-nginxdemos
    spec:
      containers:
      - image: nginxdemos/hello
        imagePullPolicy: Always
        name: app-nginxdemos
        ports:
        - containerPort: 80
        volumeMounts:
        - name: persistent-storage
          mountPath: /data
      volumes:
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: pvc-nginxdemos
---
apiVersion: v1
kind: Service
metadata:
  namespace: nginxdemos
  name: service-nginxdemos
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app-nginxdemos
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: nginxdemos
  name: ingress-nginxdemos
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/group.name: formation-k8s
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
spec:
  ingressClassName: alb
  rules:
    - host: nginxdemos.formation-k8s.widop.com
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: service-nginxdemos
              port:
                number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: nginxdemos
  name: pvc-nginxdemos
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: storageclass-efs
  resources:
    requests:
      storage: 100Mi